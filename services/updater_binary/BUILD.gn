# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/update/updater/updater_default_cfg.gni")
import("//build/ohos.gni")



config("updater_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "../../interfaces/kits/include",
    "../../services",
    "../../services/include/package",
    "../../services/include/script",
    "../../services/include/log",
    "../../services/include",
    "../../utils/include",
    "../../utils/json",
    "../../services/include/applypatch",
    "//base/startup/init/interfaces/innerkits/include",
    "//third_party/openssl/include",
    "//third_party/bounds_checking_function/include",
    "//drivers/hdf/frameworks/include/utils",
  ]
}

ohos_executable("updater_binary") {
  sources = [
    "../../services/updater_binary/main.cpp",
    "../../services/updater_binary/update_image_block.cpp",
    "../../services/updater_binary/update_image_patch.cpp",
    "../../services/updater_binary/update_partitions.cpp",
    "../../services/updater_binary/update_processor.cpp",
  ]
  configs = [ ":updater_config" ]

  ldflags = [ "-Wl -std=c++11" ]
  if (defined(binary_force_link_libs)) {
    ldflags += [ "-Wl,--whole-archive" ]
    foreach(lib, binary_force_link_libs) {
      ldflags += [ "${lib}" ]
    }
    ldflags += [ "-Wl,--no-whole-archive" ]
  }
  deps = [
    "../../interfaces/kits/misc_info:libmiscinfo",
    "../../interfaces/kits/slot_info:libslotinfo",
    "../../services/applypatch:libapplypatch",
    "../../services/diffpatch/patch:libpatch",
    "../../services/fs_manager:libfsmanager",
    "../../services/log:libupdaterlog",
    "../../services/package:libupdaterpackage",
    "../../services/script:libupdaterscript",
    "//third_party/bzip2:libbz2",
    "//third_party/cJSON:cjson_static",
    "//third_party/lz4:liblz4_static",
    "//third_party/openssl:libcrypto_static",
    "//third_party/openssl:ssl_source",
    "//third_party/zlib:libz",
  ]

  if (defined(binary_custom_lib)) {
    deps += binary_custom_lib
  }

  if (defined(use_ptable)) {
    include_dirs = [ "../../services/ptable_parse" ]
    deps += [ "../../services/ptable_parse:libptableparse" ]
    defines = [ "UPDATER_USE_PTABLE" ]
  }

  external_deps = [ "init:libfsmanager_static" ]

  install_enable = true
  install_images = [
    "system",
    "updater",
  ]
  part_name = "updater"
  subsystem_name = "updater"
}
